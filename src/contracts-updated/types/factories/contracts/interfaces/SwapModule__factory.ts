/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  SwapModule,
  SwapModuleInterface,
} from "../../../contracts/interfaces/SwapModule";
import type { Provider } from "@ethersproject/providers";
import { Contract, Signer, utils } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
    ],
    name: "decodeSwapData",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inputTokenAmountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData",
            type: "bytes",
          },
        ],
        internalType: "struct SwapModule.ExactOutputParams",
        name: "swapParams",
        type: "tuple",
      },
    ],
    name: "exactOutputNativeSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inputTokenAmountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData",
            type: "bytes",
          },
        ],
        internalType: "struct SwapModule.ExactOutputParams",
        name: "swapParams",
        type: "tuple",
      },
    ],
    name: "exactOutputSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class SwapModule__factory {
  static readonly abi = _abi;
  static createInterface(): SwapModuleInterface {
    return new utils.Interface(_abi) as SwapModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SwapModule {
    return new Contract(address, _abi, signerOrProvider) as SwapModule;
  }
}
