/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Spritz, SpritzInterface } from "../../contracts/Spritz";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sourceToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
    ],
    name: "Payment",
    type: "event",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "sourceTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sourceTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "allowanceTarget",
        type: "address",
      },
      {
        internalType: "address",
        name: "swapTarget",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "swapCallData",
        type: "bytes",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
    ],
    name: "payWithSwap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentTokenAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
    ],
    name: "payWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610d428061007e6000396000f3fe60806040526004361061005a5760003560e01c80638da5cb5b116100435780638da5cb5b1461009657806398295f25146100c2578063f2fde38b146100d557600080fd5b806358fb6fac1461005f578063715018a614610081575b600080fd5b34801561006b57600080fd5b5061007f61007a366004610b67565b6100f5565b005b34801561008d57600080fd5b5061007f6101dd565b3480156100a257600080fd5b50600054604080516001600160a01b039092168252519081900360200190f35b61007f6100d0366004610ba9565b610243565b3480156100e157600080fd5b5061007f6100f0366004610c8d565b610797565b6040516323b872dd60e01b81523360048201526001600160a01b0385811660248301526044820184905284916000918316906323b872dd906064016020604051808303816000875af115801561014f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101739190610caf565b9050806101c75760405162461bcd60e51b815260206004820152601560248201527f7472616e7366657246726f6d2829206661696c6564000000000000000000000060448201526064015b60405180910390fd5b6101d5868686888888610879565b505050505050565b6000546001600160a01b031633146102375760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101be565b61024160006108e7565b565b6001600160a01b0385161561025d5761025d89898761094f565b6000846001600160a01b031634858560405161027a929190610cd1565b60006040518083038185875af1925050503d80600081146102b7576040519150601f19603f3d011682016040523d82523d6000602084013e6102bc565b606091505b505090508061030d5760405162461bcd60e51b815260206004820152601060248201527f537761702063616c6c206661696c65640000000000000000000000000000000060448201526064016101be565b60405163a9059cbb60e01b81526001600160a01b038c8116600483015260248201899052899160009183169063a9059cbb906044016020604051808303816000875af1158015610361573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103859190610caf565b9050806103fa5760405162461bcd60e51b815260206004820152603760248201527f436f756c64206e6f74207472616e73666572207061796d656e7420746f6b656e60448201527f20746f2064657374696e6174696f6e206164647265737300000000000000000060648201526084016101be565b6040516370a0823160e01b81523060048201526000906001600160a01b0384169063a9059cbb90339083906370a0823190602401602060405180830381865afa15801561044b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061046f9190610ce1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156104d2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104f69190610caf565b90508061056b5760405162461bcd60e51b815260206004820152603f60248201527f436f756c64206e6f7420726566756e642072656d61696e696e67207061796d6560448201527f6e7420746f6b656e20746f206f726967696e6174696e6720616464726573730060648201526084016101be565b6040516370a0823160e01b81523060048201528d906000906001600160a01b0383169063a9059cbb90339083906370a0823190602401602060405180830381865afa1580156105be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e29190610ce1565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af1158015610645573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106699190610caf565b9050806106de5760405162461bcd60e51b815260206004820152603f60248201527f436f756c64206e6f7420726566756e642072656d61696e696e67207061796d6560448201527f6e7420746f6b656e20746f206f726967696e6174696e6720616464726573730060648201526084016101be565b604051600090339047908381818185875af1925050503d8060008114610720576040519150601f19603f3d011682016040523d82523d6000602084013e610725565b606091505b50509050806107765760405162461bcd60e51b815260206004820152600d60248201527f526566756e64206661696c65640000000000000000000000000000000000000060448201526064016101be565b505050506107888d8d8d8d8d89610879565b50505050505050505050505050565b6000546001600160a01b031633146107f15760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016101be565b6001600160a01b03811661086d5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016101be565b610876816108e7565b50565b604080516001600160a01b038781168252602082018790528581168284015260608201859052336080830152881660a082015260c0810183905290517f207886205a3ec0cedeb8833ee68a435bdb413cde3610711fe63fb2183bfeb6679181900360e00190a1505050505050565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b8261095a8282610a50565b6040516323b872dd60e01b8152336004820152306024820152604481018490526000906001600160a01b038316906323b872dd906064016020604051808303816000875af11580156109b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d49190610caf565b905080610a495760405162461bcd60e51b815260206004820152602b60248201527f436f756c64206e6f74207472616e73666572207061796d656e7420746f6b656e60448201527f2066726f6d20706179657200000000000000000000000000000000000000000060648201526084016101be565b5050505050565b80600019610a496001600160a01b03831685836040516001600160a01b03838116602483015260448201839052600091829182919087169060640160408051601f198184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663095ea7b360e01b17905251610ad59190610cfa565b6000604051808303816000865af19150503d8060008114610b12576040519150601f19603f3d011682016040523d82523d6000602084013e610b17565b606091505b5091509150818015610b41575080511580610b41575080806020019051810190610b419190610caf565b9695505050505050565b80356001600160a01b0381168114610b6257600080fd5b919050565b60008060008060808587031215610b7d57600080fd5b610b8685610b4b565b9350610b9460208601610b4b565b93969395505050506040820135916060013590565b6000806000806000806000806000806101208b8d031215610bc957600080fd5b610bd28b610b4b565b9950610be060208c01610b4b565b985060408b01359750610bf560608c01610b4b565b965060808b01359550610c0a60a08c01610b4b565b9450610c1860c08c01610b4b565b935060e08b013567ffffffffffffffff80821115610c3557600080fd5b818d0191508d601f830112610c4957600080fd5b813581811115610c5857600080fd5b8e6020828501011115610c6a57600080fd5b6020830195508094505050506101008b013590509295989b9194979a5092959850565b600060208284031215610c9f57600080fd5b610ca882610b4b565b9392505050565b600060208284031215610cc157600080fd5b81518015158114610ca857600080fd5b8183823760009101908152919050565b600060208284031215610cf357600080fd5b5051919050565b6000825160005b81811015610d1b5760208186018101518583015201610d01565b81811115610d2a576000828501525b50919091019291505056fea164736f6c634300080d000a";

type SpritzConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpritzConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Spritz__factory extends ContractFactory {
  constructor(...args: SpritzConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Spritz> {
    return super.deploy(overrides || {}) as Promise<Spritz>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): Spritz {
    return super.attach(address) as Spritz;
  }
  override connect(signer: Signer): Spritz__factory {
    return super.connect(signer) as Spritz__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpritzInterface {
    return new utils.Interface(_abi) as SpritzInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Spritz {
    return new Contract(address, _abi, signerOrProvider) as Spritz;
  }
}
