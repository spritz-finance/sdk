/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../../common";
import type {
  UniswapV2Module,
  UniswapV2ModuleInterface,
} from "../../../contracts/swapModules/UniswapV2Module";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "address",
        name: "_weth",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "FailedRefund",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "swapData",
        type: "bytes",
      },
    ],
    name: "decodeSwapData",
    outputs: [
      {
        internalType: "address",
        name: "inputTokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "outputTokenAddress",
        type: "address",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inputTokenAmountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData",
            type: "bytes",
          },
        ],
        internalType: "struct SwapModule.ExactOutputParams",
        name: "swapParams",
        type: "tuple",
      },
    ],
    name: "exactOutputNativeSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "inputTokenAmountMax",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "paymentTokenAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "deadline",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "swapData",
            type: "bytes",
          },
        ],
        internalType: "struct SwapModule.ExactOutputParams",
        name: "swapParams",
        type: "tuple",
      },
    ],
    name: "exactOutputSwap",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "swapTarget",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "weth",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b5060405161120338038061120383398101604081905261002f91610069565b6001600160601b0319606092831b811660a052911b1660805261009c565b80516001600160a01b038116811461006457600080fd5b919050565b6000806040838503121561007c57600080fd5b6100858361004d565b91506100936020840161004d565b90509250929050565b60805160601c60a05160601c61110d6100f66000396000818160e3015281816103cb0152818161046f015281816104b6015281816104eb01526107c70152600081816097015281816101690152610226015261110d6000f3fe60806040526004361061005a5760003560e01c80637e7f0cde116100435780637e7f0cde146100d1578063cde99e6314610105578063cf0e81601461014557600080fd5b80632f2a12711461005f5780633fc8cef314610085575b600080fd5b61007261006d366004610ea0565b610165565b6040519081526020015b60405180910390f35b34801561009157600080fd5b506100b97f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161007c565b3480156100dd57600080fd5b506100b97f000000000000000000000000000000000000000000000000000000000000000081565b34801561011157600080fd5b50610125610120366004610e2e565b610331565b604080516001600160a01b0393841681529290911660208301520161007c565b34801561015157600080fd5b50610072610160366004610ea0565b61034a565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663d0e30db083604001356040518263ffffffff1660e01b81526004016000604051808303818588803b1580156101c657600080fd5b505af11580156101da573d6000803e3d6000fd5b50505050506000806101eb84610392565b909350915050801561032a576040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690632e1a7d4d90602401600060405180830381600087803b15801561027257600080fd5b505af1158015610286573d6000803e3d6000fd5b506000925061029e9150506040860160208701610d1e565b6001600160a01b03168260405160006040518083038185875af1925050503d80600081146102e8576040519150601f19603f3d011682016040523d82523d6000602084013e6102ed565b606091505b5050905080610328576040517feba0f38900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b5092915050565b60008061033e8484610532565b90969095509350505050565b60008060008061035985610392565b91945092509050801561038a5761038a6103796040870160208801610d1e565b6001600160a01b03851690836105cb565b509392505050565b6000808080806103ad6103a860a0880188610fb4565b610532565b50604051636eb1769f60e11b81523060048201526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000008116602483015292945090925082916000919083169063dd62ed3e9060440160206040518083038186803b15801561042157600080fd5b505afa158015610435573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104599190610edb565b90508061049b576104966001600160a01b0383167f0000000000000000000000000000000000000000000000000000000000000000600019610679565b610512565b8760400135811015610512576104dc6001600160a01b0383167f00000000000000000000000000000000000000000000000000000000000000006000610679565b6105126001600160a01b0383167f0000000000000000000000000000000000000000000000000000000000000000600019610679565b60008061051f8a876107c2565b959b909a50949850939650505050505050565b6060600080600061057886868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506108c392505050565b9050808160008151811061058e5761058e6110d4565b602002602001015182600184516105a5919061104d565b815181106105b5576105b56110d4565b6020026020010151935093509350509250925092565b6040516001600160a01b0383166024820152604481018290526106749084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526109cf565b505050565b8015806107025750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156106c857600080fd5b505afa1580156106dc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107009190610edb565b155b6107795760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084015b60405180910390fd5b6040516001600160a01b0383166024820152604481018290526106749084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401610610565b6000807f0000000000000000000000000000000000000000000000000000000000000000816001600160a01b038216638803dbee606088013560408901358861080e60208c018c610d1e565b8b608001356040518663ffffffff1660e01b8152600401610833959493929190610f43565b600060405180830381600087803b15801561084d57600080fd5b505af1158015610861573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108899190810190610d47565b90508060008151811061089e5761089e6110d4565b602002602001015193508386604001356108b8919061104d565b925050509250929050565b6060601482516108d39190611094565b156109205760405162461bcd60e51b815260206004820152601460248201527f696e76616c6964206279746573206c656e6774680000000000000000000000006044820152606401610770565b600060148351610930919061101a565b90508067ffffffffffffffff81111561094b5761094b6110ea565b604051908082528060200260200182016040528015610974578160200160208202803683370190505b50915060005b818110156109c8576109968461099183601461102e565b610ab4565b8382815181106109a8576109a86110d4565b6001600160a01b039092166020928302919091019091015260010161097a565b5050919050565b6000610a24826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610b849092919063ffffffff16565b8051909150156106745780806020019051810190610a429190610e0c565b6106745760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610770565b600081610ac2816014611002565b1015610b105760405162461bcd60e51b815260206004820152601260248201527f746f416464726573735f6f766572666c6f7700000000000000000000000000006044820152606401610770565b610b1b826014611002565b83511015610b6b5760405162461bcd60e51b815260206004820152601560248201527f746f416464726573735f6f75744f66426f756e647300000000000000000000006044820152606401610770565b5001602001516c01000000000000000000000000900490565b6060610b938484600085610b9d565b90505b9392505050565b606082471015610c155760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610770565b6001600160a01b0385163b610c6c5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610770565b600080866001600160a01b03168587604051610c889190610ef4565b60006040518083038185875af1925050503d8060008114610cc5576040519150601f19603f3d011682016040523d82523d6000602084013e610cca565b606091505b5091509150610cda828286610ce5565b979650505050505050565b60608315610cf4575081610b96565b825115610d045782518084602001fd5b8160405162461bcd60e51b81526004016107709190610f10565b600060208284031215610d3057600080fd5b81356001600160a01b0381168114610b9657600080fd5b60006020808385031215610d5a57600080fd5b825167ffffffffffffffff80821115610d7257600080fd5b818501915085601f830112610d8657600080fd5b815181811115610d9857610d986110ea565b8060051b604051601f19603f83011681018181108582111715610dbd57610dbd6110ea565b604052828152858101935084860182860187018a1015610ddc57600080fd5b600095505b83861015610dff578051855260019590950194938601938601610de1565b5098975050505050505050565b600060208284031215610e1e57600080fd5b81518015158114610b9657600080fd5b60008060208385031215610e4157600080fd5b823567ffffffffffffffff80821115610e5957600080fd5b818501915085601f830112610e6d57600080fd5b813581811115610e7c57600080fd5b866020828501011115610e8e57600080fd5b60209290920196919550909350505050565b600060208284031215610eb257600080fd5b813567ffffffffffffffff811115610ec957600080fd5b820160c08185031215610b9657600080fd5b600060208284031215610eed57600080fd5b5051919050565b60008251610f06818460208701611064565b9190910192915050565b6020815260008251806020840152610f2f816040850160208701611064565b601f01601f19169190910160400192915050565b600060a082018783526020878185015260a0604085015281875180845260c086019150828901935060005b81811015610f935784516001600160a01b031683529383019391830191600101610f6e565b50506001600160a01b03969096166060850152505050608001529392505050565b6000808335601e19843603018112610fcb57600080fd5b83018035915067ffffffffffffffff821115610fe657600080fd5b602001915036819003821315610ffb57600080fd5b9250929050565b60008219821115611015576110156110a8565b500190565b600082611029576110296110be565b500490565b6000816000190483118215151615611048576110486110a8565b500290565b60008282101561105f5761105f6110a8565b500390565b60005b8381101561107f578181015183820152602001611067565b8381111561108e576000848401525b50505050565b6000826110a3576110a36110be565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000807000a";

type UniswapV2ModuleConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: UniswapV2ModuleConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class UniswapV2Module__factory extends ContractFactory {
  constructor(...args: UniswapV2ModuleConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _swapTarget: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<UniswapV2Module> {
    return super.deploy(
      _swapTarget,
      _weth,
      overrides || {}
    ) as Promise<UniswapV2Module>;
  }
  override getDeployTransaction(
    _swapTarget: PromiseOrValue<string>,
    _weth: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_swapTarget, _weth, overrides || {});
  }
  override attach(address: string): UniswapV2Module {
    return super.attach(address) as UniswapV2Module;
  }
  override connect(signer: Signer): UniswapV2Module__factory {
    return super.connect(signer) as UniswapV2Module__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): UniswapV2ModuleInterface {
    return new utils.Interface(_abi) as UniswapV2ModuleInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): UniswapV2Module {
    return new Contract(address, _abi, signerOrProvider) as UniswapV2Module;
  }
}
