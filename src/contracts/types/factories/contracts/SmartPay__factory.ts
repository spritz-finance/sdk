/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type { SmartPay, SmartPayInterface } from "../../contracts/SmartPay";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "spritzPay",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChargeSubscriptionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "InvalidPaymentCharge",
    type: "error",
  },
  {
    inputs: [],
    name: "SpritzPayPaymentFailure",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "UnauthorizedExecutor",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "subscriptionId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalPayments",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "enum SmartPay.SubscriptionCadence",
        name: "cadence",
        type: "uint8",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "FIXED_SUBSCRIPTION_TYPEHASH",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPayments",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
      {
        internalType: "enum SmartPay.SubscriptionCadence",
        name: "cadence",
        type: "uint8",
      },
      {
        components: [
          {
            internalType: "uint8",
            name: "v",
            type: "uint8",
          },
          {
            internalType: "bytes32",
            name: "r",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "s",
            type: "bytes32",
          },
        ],
        internalType: "struct SmartPay.Signature",
        name: "signature",
        type: "tuple",
      },
    ],
    name: "createSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPayments",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
      {
        internalType: "enum SmartPay.SubscriptionCadence",
        name: "cadence",
        type: "uint8",
      },
    ],
    name: "hashSubscription",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subscriber",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPayments",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
      {
        internalType: "enum SmartPay.SubscriptionCadence",
        name: "cadence",
        type: "uint8",
      },
    ],
    name: "processPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "uint256",
        name: "paymentCount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "totalPayments",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPaymentTimestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x6101606040523480156200001257600080fd5b5060405162001f7b38038062001f7b8339810160408190526200003591620001bb565b60408051808201909152600e81526d53707269747a536d61727450617960901b6020820152620000796040805180820190915260018152603160f81b602082015290565b815160208084019190912082518383012060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81880181905281830187905260608201869052608082019490945230818401528151808203909301835260c00190528051940193909320919290916080523060601b60c0526101205250506000805460ff19169055506200012390503362000162565b6001600160a01b0381166200014b5760405163e6c4247b60e01b815260040160405180910390fd5b60601b6001600160601b03191661014052620001ed565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b600060208284031215620001ce57600080fd5b81516001600160a01b0381168114620001e657600080fd5b9392505050565b60805160a05160c05160601c60e05161010051610120516101405160601c611d1f6200025c600039600081816108860152818161091b01526109e401526000610f0d01526000610f5c01526000610f3701526000610e9001526000610eba01526000610ee40152611d1f6000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063715018a611610081578063a116e3481161005b578063a116e34814610214578063c798d77a14610227578063f2fde38b1461023a57600080fd5b8063715018a6146101db5780638456cb59146101e35780638da5cb5b146101eb57600080fd5b806354fd4d50116100b257806354fd4d501461015f5780635c975abb1461019e5780635cd42985146101b457600080fd5b80631a72b17a146100d95780632d5bbf60146100ff5780633f4ba83a14610155575b600080fd5b6100ec6100e73660046117f5565b61024d565b6040519081526020015b60405180910390f35b61013561010d3660046118f8565b6001602081905260009182526040909120805491810154600282015460039092015490919084565b6040805194855260208501939093529183015260608201526080016100f6565b61015d610290565b005b604080518082018252600181527f3100000000000000000000000000000000000000000000000000000000000000602082015290516100f69190611a17565b60005460ff1660405190151581526020016100f6565b6100ec7f10ddfd46ba6123dfaedf9b25f2caf12ac8578c5cb691ce4662a2ef2ac454265481565b61015d6102a2565b61015d6102b4565b60005461010090046001600160a01b03166040516001600160a01b0390911681526020016100f6565b61015d6102223660046117f5565b6102c4565b61015d61023536600461185f565b610398565b61015d6102483660046117da565b6104d1565b60008787878787878760405160200161026c979695949392919061198b565b60408051601f19818403018152919052805160209091012098975050505050505050565b610298610561565b6102a06105c1565b565b6102aa610561565b6102a06000610613565b6102bc610561565b6102a0610683565b6102cc6106c0565b60006102dd8888888888888861024d565b600081815260016020819052604090912090810154919250906102ff57600080fd5b6000610315868360000154846001015487610713565b90508061035c576040517f9d63c0ee000000000000000000000000000000000000000000000000000000008152600481018490524260248201526044015b60405180910390fd5b426003830155815460010182558861037f6001600160a01b0382168c308c6107b2565b61038b8b828b89610869565b5050505050505050505050565b8515806103a3575084155b156103ad57600080fd5b600061042961040d7f10ddfd46ba6123dfaedf9b25f2caf12ac8578c5cb691ce4662a2ef2ac45426548a8a8a8a8a8a6040516020016103f297969594939291906119d8565b60405160208183030381529060405280519060200120610aa8565b61041a602085018561192a565b84602001358560400135610b17565b9050600061043c828a8a8a8a8a8a61024d565b600081815260016020819052604090912090810154919250901561045f57600080fd5b878160010181905550868160020181905550896001600160a01b031682846001600160a01b03167f1182b505dbf2bb0d0d62156ed03950045b3c2050a5e9f3c22b2e3c8126a0dadc8c8c8c8c8c6040516104bd959493929190611a4a565b60405180910390a450505050505050505050565b6104d9610561565b6001600160a01b0381166105555760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f64647265737300000000000000000000000000000000000000000000000000006064820152608401610353565b61055e81610613565b50565b6000546001600160a01b036101009091041633146102a05760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610353565b6105c9610b3f565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600080546001600160a01b038381166101008181027fffffffffffffffffffffff0000000000000000000000000000000000000000ff851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b61068b6106c0565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586105f63390565b60005460ff16156102a05760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a20706175736564000000000000000000000000000000006044820152606401610353565b6000808511801561072357508484145b15610730575060006107aa565b600082600281111561074457610744611cfc565b141561075c57610755428486610b91565b90506107aa565b600182600281111561077057610770611cfc565b141561078157610755428486610c37565b600282600281111561079557610795611cfc565b14156107a657610755428486610c98565b5060005b949350505050565b6040516001600160a01b03808516602483015283166044820152606481018290526108639085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152610cbf565b50505050565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301526000919085169063dd62ed3e9060440160206040518083038186803b1580156108d457600080fd5b505afa1580156108e8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061090c9190611911565b905082811015610957576109577f000000000000000000000000000000000000000000000000000000000000000061094683600019611c31565b6001600160a01b0387169190610da9565b604080516001600160a01b03878116602483015286811660448301526064820186905260848083018690528351808403909101815260a490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f819565b900000000000000000000000000000000000000000000000000000000179052915160009283927f000000000000000000000000000000000000000000000000000000000000000090911691610a11919061196f565b6000604051808303816000865af19150503d8060008114610a4e576040519150601f19603f3d011682016040523d82523d6000602084013e610a53565b606091505b509150915081610a9f57805115610a6d5780518082602001fd5b6040517f3252596900000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b50505050505050565b6000610b11610ab5610e83565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b6000806000610b2887878787610faa565b91509150610b3581611097565b5095945050505050565b60005460ff166102a05760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f74207061757365640000000000000000000000006044820152606401610353565b600080610b9d85611252565b90506000610baa85611252565b90506000610bb882846112c4565b905084811015610bce5760009350505050610c30565b8151601d60ff821610610c09576000610bef85604001518660200151611338565b9050836000015160ff168160ff161015610c07578091505b505b835160ff8083169116101580610c295750610c25866001611abd565b8210155b9450505050505b9392505050565b600080610c43856113d2565b90506000610c50856113d2565b90506000610c5e8688611406565b905084811015610c745760009350505050610c30565b8183101580610c8d5750610c89856001611abd565b8110155b979650505050505050565b600080610ca48561142b565b90506000610cb18561142b565b90506000610c5e8688611449565b6000610d14826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661146d9092919063ffffffff16565b805190915015610da45780806020019051810190610d3291906118d6565b610da45760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610353565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b158015610df557600080fd5b505afa158015610e09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e2d9190611911565b610e379190611abd565b6040516001600160a01b0385166024820152604481018290529091506108639085907f095ea7b300000000000000000000000000000000000000000000000000000000906064016107ff565b6000306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148015610edc57507f000000000000000000000000000000000000000000000000000000000000000046145b15610f0657507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115610fe1575060009050600361108e565b8460ff16601b14158015610ff957508460ff16601c14155b1561100a575060009050600461108e565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa15801561105e573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166110875760006001925092505061108e565b9150600090505b94509492505050565b60008160048111156110ab576110ab611cfc565b14156110b45750565b60018160048111156110c8576110c8611cfc565b14156111165760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610353565b600281600481111561112a5761112a611cfc565b14156111785760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610353565b600381600481111561118c5761118c611cfc565b14156111e55760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610353565b60048160048111156111f9576111f9611cfc565b141561055e5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610353565b604080516080810182526000808252602082018190529181018290526060810182905290808061128d6112886201518087611b2b565b61147c565b6040805160808101825260ff928316815291909216602082015263ffffffff90921690820152606081019590955250929392505050565b60008160600151836060015111156112db57600080fd5b826020015160ff168360400151600c6112f49190611bc6565b836020015160ff168460400151600c61130d9190611bc6565b6113179190611ad5565b6113219190611c48565b61132b9190611c48565b63ffffffff169392505050565b60008160ff166001148061134f57508160ff166003145b8061135d57508160ff166005145b8061136b57508160ff166007145b8061137957508160ff166008145b8061138757508160ff16600a145b8061139557508160ff16600c145b156113a25750601f610b11565b8160ff166002146113b55750601e610b11565b6113be836115f0565b6113c957601c610c30565b601d9392505050565b6000806113e26201518084611b2b565b905060076113f1826003611abd565b6113fb9190611c99565b610c30906001611abd565b6000806114138484611449565b61141e906002611abd565b90506107aa600782611b2b565b60008061143b6201518084611c99565b9050610c30610e1082611b2b565b60008183111561145857600080fd5b826114638184611c31565b610c309190611b2b565b60606107aa848460008561163e565b60008080838162253d8c6114938362010bd9611a7e565b61149d9190611a7e565b9050600062023ab16114b0836004611b3f565b6114ba9190611afd565b905060046114cb8262023ab1611b3f565b6114d6906003611a7e565b6114e09190611afd565b6114ea9083611bf2565b9150600062164b096114fd846001611a7e565b61150990610fa0611b3f565b6115139190611afd565b90506004611523826105b5611b3f565b61152d9190611afd565b6115379084611bf2565b61154290601f611a7e565b9250600061098f611554856050611b3f565b61155e9190611afd565b9050600060506115708361098f611b3f565b61157a9190611afd565b6115849086611bf2565b9050611591600b83611afd565b945061159e85600c611b3f565b6115a9836002611a7e565b6115b39190611bf2565b915084836115c2603187611bf2565b6115cd906064611b3f565b6115d79190611a7e565b6115e19190611a7e565b9a919950975095505050505050565b60006115fd600483611cad565b63ffffffff1615801561161f5750611616606483611cad565b63ffffffff1615155b80610b11575061163161019083611cad565b63ffffffff161592915050565b6060824710156116b65760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610353565b6001600160a01b0385163b61170d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610353565b600080866001600160a01b03168587604051611729919061196f565b60006040518083038185875af1925050503d8060008114611766576040519150601f19603f3d011682016040523d82523d6000602084013e61176b565b606091505b5091509150610c8d82828660608315611785575081610c30565b8251156117955782518084602001fd5b8160405162461bcd60e51b81526004016103539190611a17565b80356001600160a01b03811681146117c657600080fd5b919050565b8035600381106117c657600080fd5b6000602082840312156117ec57600080fd5b610c30826117af565b600080600080600080600060e0888a03121561181057600080fd5b611819886117af565b9650611827602089016117af565b955060408801359450606088013593506080880135925060a0880135915061185160c089016117cb565b905092959891949750929550565b600080600080600080600087890361012081121561187c57600080fd5b611885896117af565b9750602089013596506040890135955060608901359450608089013593506118af60a08a016117cb565b9250606060bf19820112156118c357600080fd5b5060c08801905092959891949750929550565b6000602082840312156118e857600080fd5b81518015158114610c3057600080fd5b60006020828403121561190a57600080fd5b5035919050565b60006020828403121561192357600080fd5b5051919050565b60006020828403121561193c57600080fd5b813560ff81168114610c3057600080fd5b6003811061196b57634e487b7160e01b600052602160045260246000fd5b9052565b60008251611981818460208701611c6d565b9190910192915050565b6001600160a01b0388811682528716602082015260408101869052606081018590526080810184905260a0810183905260e081016119cc60c083018461194d565b98975050505050505050565b600060e0820190508882526001600160a01b03881660208301528660408301528560608301528460808301528360a08301526119cc60c083018461194d565b6020815260008251806020840152611a36816040850160208701611c6d565b601f01601f19169190910160400192915050565b600060a082019050868252856020830152846040830152836060830152611a74608083018461194d565b9695505050505050565b6000808212826001600160ff1b0303841381151615611a9f57611a9f611cd0565b82600160ff1b038412811615611ab757611ab7611cd0565b50500190565b60008219821115611ad057611ad0611cd0565b500190565b600063ffffffff808316818516808303821115611af457611af4611cd0565b01949350505050565b600082611b0c57611b0c611ce6565b600160ff1b821460001984141615611b2657611b26611cd0565b500590565b600082611b3a57611b3a611ce6565b500490565b60006001600160ff1b03600084136000841385830485118282161615611b6757611b67611cd0565b600160ff1b6000871286820588128184161615611b8657611b86611cd0565b60008712925087820587128484161615611ba257611ba2611cd0565b87850587128184161615611bb857611bb8611cd0565b505050929093029392505050565b600063ffffffff80831681851681830481118215151615611be957611be9611cd0565b02949350505050565b600080831283600160ff1b01831281151615611c1057611c10611cd0565b836001600160ff1b03018313811615611c2b57611c2b611cd0565b50500390565b600082821015611c4357611c43611cd0565b500390565b600063ffffffff83811690831681811015611c6557611c65611cd0565b039392505050565b60005b83811015611c88578181015183820152602001611c70565b838111156108635750506000910152565b600082611ca857611ca8611ce6565b500690565b600063ffffffff80841680611cc457611cc4611ce6565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fdfea164736f6c6343000807000a";

type SmartPayConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SmartPayConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SmartPay__factory extends ContractFactory {
  constructor(...args: SmartPayConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    spritzPay: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SmartPay> {
    return super.deploy(spritzPay, overrides || {}) as Promise<SmartPay>;
  }
  override getDeployTransaction(
    spritzPay: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(spritzPay, overrides || {});
  }
  override attach(address: string): SmartPay {
    return super.attach(address) as SmartPay;
  }
  override connect(signer: Signer): SmartPay__factory {
    return super.connect(signer) as SmartPay__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SmartPayInterface {
    return new utils.Interface(_abi) as SmartPayInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SmartPay {
    return new Contract(address, _abi, signerOrProvider) as SmartPay;
  }
}
