/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type { PromiseOrValue } from "../../common";
import type {
  SpritzSmartPay_Old,
  SpritzSmartPay_OldInterface,
} from "../../contracts/SpritzSmartPay_Old";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "spritzPay",
        type: "address",
      },
      {
        internalType: "address",
        name: "autoTaskWallet",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "ChargeSubscriptionFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "InvalidAddress",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "date",
        type: "uint256",
      },
    ],
    name: "InvalidPaymentCharge",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "caller",
        type: "address",
      },
    ],
    name: "UnauthorizedExecutor",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "SubscriptionCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "SubscriptionDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "UserActivated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "canChargeSubscription",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "paymentAmount",
        type: "uint32",
      },
      {
        internalType: "uint128",
        name: "totalPayments",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
      {
        internalType: "enum SpritzSmartPay_Old.SubscriptionCadence",
        name: "cadence",
        type: "uint8",
      },
    ],
    name: "createSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "deactivateSubscription",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getActiveUsers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "getSubscription",
    outputs: [
      {
        components: [
          {
            internalType: "enum SpritzSmartPay_Old.SubscriptionCadence",
            name: "cadence",
            type: "uint8",
          },
          {
            internalType: "uint32",
            name: "paymentAmount",
            type: "uint32",
          },
          {
            internalType: "uint128",
            name: "paymentCount",
            type: "uint128",
          },
          {
            internalType: "uint128",
            name: "totalPayments",
            type: "uint128",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "address",
            name: "paymentToken",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startTime",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "lastPaymentTimestamp",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "paymentReference",
            type: "bytes32",
          },
        ],
        internalType: "struct SpritzSmartPay_Old.Subscription",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSubscriptionCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getUserSubscriptions",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "subscriptionId",
        type: "bytes32",
      },
    ],
    name: "processPayment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subscriptionNonce",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "subscriptions",
    outputs: [
      {
        internalType: "enum SpritzSmartPay_Old.SubscriptionCadence",
        name: "cadence",
        type: "uint8",
      },
      {
        internalType: "uint32",
        name: "paymentAmount",
        type: "uint32",
      },
      {
        internalType: "uint128",
        name: "paymentCount",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "totalPayments",
        type: "uint128",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startTime",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "lastPaymentTimestamp",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b50604051620024423803806200244283398101604081905262000034916200011b565b6000805460ff191690556200004933620000a5565b6001600160a01b03821615806200006757506001600160a01b038116155b15620000865760405163e6c4247b60e01b815260040160405180910390fd5b6001600160601b0319606092831b8116608052911b1660a05262000153565b600080546001600160a01b03838116610100818102610100600160a81b0319851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b80516001600160a01b03811681146200011657600080fd5b919050565b600080604083850312156200012f57600080fd5b6200013a83620000fe565b91506200014a60208401620000fe565b90509250929050565b60805160601c60a05160601c6122bf620001836000396000505060008181610ccf0152610d6a01526122bf6000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c8063715018a6116100975780639910705b116100665780639910705b14610295578063ca6efcdd146102a8578063f2fde38b146102e9578063f5593607146102fc57600080fd5b8063715018a6146101c95780638456cb59146101d15780638da5cb5b146101d957806394259c6c1461020257600080fd5b80634eabe457116100d35780634eabe4571461016b578063539025061461018c5780635c975abb1461019f57806361d80c24146101b657600080fd5b80631f32768e146101055780632e6ca5881461012e5780633a74717d1461014e5780633f4ba83a14610163575b600080fd5b610118610113366004611bba565b610311565b6040516101259190611df2565b60405180910390f35b61014161013c366004611b7d565b61041a565b6040516101259190611d21565b61016161015c366004611bba565b610444565b005b61016161054a565b61017e610179366004611b7d565b61055c565b604051908152602001610125565b61016161019a366004611bba565b61057d565b60005460ff165b6040519015158152602001610125565b6101616101c4366004611bec565b6106b8565b61016161090f565b610161610921565b60005461010090046001600160a01b03166040516001600160a01b039091168152602001610125565b610280610210366004611bba565b6003602081905260009182526040909120805460018201546002830154938301546004840154600585015460069095015460ff85169663ffffffff610100870416966001600160801b036501000000000090970487169695909516946001600160a01b0391821694909116929189565b60405161012599989796959493929190611d59565b6101a66102a3366004611bba565b610931565b6102d16102b6366004611b7d565b6005602052600090815260409020546001600160801b031681565b6040516001600160801b039091168152602001610125565b6101616102f7366004611b7d565b610a3f565b610304610acc565b6040516101259190611cd4565b6040805161012081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e0810182905261010081019190915260008281526003602052604090819020815161012081019092528054829060ff16600281111561038c5761038c612270565b600281111561039d5761039d612270565b8152815461010080820463ffffffff166020840152650100000000009091046001600160801b039081166040840152600184015416606083015260028301546001600160a01b03908116608084015260038401541660a0830152600483015460c0830152600583015460e083015260069092015491015292915050565b6001600160a01b038116600090815260046020526040902060609061043e90610add565b92915050565b61044c610ae8565b60008181526003602052604081209061046483610931565b9050806104ab576040517f82f4b156000000000000000000000000000000000000000000000000000000008152600481018490524260248201526044015b60405180910390fd5b42600583810191909155825460019184916104d99084906501000000000090046001600160801b0316611edf565b82546001600160801b0391821661010093840a908102920219161790915583546003850154600093506105209263ffffffff920491909116906001600160a01b0316610b3b565b905061052c8382610c89565b6003830154610544906001600160a01b031682610cb2565b50505050565b610552610d91565b61055a610df1565b565b6001600160a01b038116600090815260046020526040812061043e90610e43565b600081815260036020526040902060028101546001600160a01b031633146105d3576040517f170b9abb0000000000000000000000000000000000000000000000000000000081523360048201526024016104a2565b3360009081526004602052604090206105ec9083610e4d565b50600082815260036020819052604080832080547fffffffffffffffffffffff0000000000000000000000000000000000000000001681556001810180546fffffffffffffffffffffffffffffffff1916905560028101805473ffffffffffffffffffffffffffffffffffffffff1990811690915592810180549093169092556004820183905560058201839055600690910182905551839133917fa7eb2c80cd483b6afbfd9a7c74ba3873e0b2e55e73fddd632e695fec0f7a6ec29190a3506106b533610e60565b50565b3360009081526005602052604080822080546001600160801b03808216600101166fffffffffffffffffffffffffffffffff19909116179055805161012081019091528083600281111561070e5761070e612270565b81526020018863ffffffff16815260200160006001600160801b03168152602001876001600160801b03168152602001336001600160a01b03168152602001866001600160a01b03168152602001858152602001600081526020018481525090506000610779610f0d565b6000818152600360205260409020835181549293508492829060ff191660018360028111156107aa576107aa612270565b0217905550602082810151825460408086015174ffffffffffffffffffffffffffffffffffffffff001990921661010063ffffffff94851681027fffffffffffffffffffffff00000000000000000000000000000000ffffffffff1691909117650100000000006001600160801b039485160217865560608701516001870180546fffffffffffffffffffffffffffffffff19169190941617909255608086015160028601805473ffffffffffffffffffffffffffffffffffffffff199081166001600160a01b039384161790915560a0880151600388018054909216921691909117905560c086015160048087019190915560e087015160058701559190950151600690940193909355336000908152929091529190206108ce918390610f8a16565b50604051819033907f6a3a48b5925595b0ce0e996429280ed5bbb7492932b261842949ace66c606b1a90600090a3505061090733610e60565b505050505050565b610917610d91565b61055a6000610f96565b610929610d91565b61055a610ffc565b60008061093d83610311565b9050600081606001516001600160801b0316118015610975575080606001516001600160801b031681604001516001600160801b0316145b156109835750600092915050565b8051600081600281111561099957610999612270565b14156109c55760c082015160408301516109bd9142916001600160801b0316611039565b949350505050565b60018160028111156109d9576109d9612270565b14156109fd5760c082015160408301516109bd9142916001600160801b03166110dd565b6002816002811115610a1157610a11612270565b1415610a355760c082015160408301516109bd9142916001600160801b031661113e565b5060009392505050565b610a47610d91565b6001600160a01b038116610ac35760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084016104a2565b6106b581610f96565b6060610ad86001611165565b905090565b606061043e8261116e565b60005460ff161561055a5760405162461bcd60e51b815260206004820152601060248201527f5061757361626c653a207061757365640000000000000000000000000000000060448201526064016104a2565b60408051600481526024810182526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f313ce567000000000000000000000000000000000000000000000000000000001790529051600091829182916001600160a01b03861691610baf9190611cb8565b600060405180830381855afa9150503d8060008114610bea576040519150601f19603f3d011682016040523d82523d6000602084013e610bef565b606091505b509150915081610c415760405162461bcd60e51b815260206004820152601460248201527f636f756c646e742067657420646563696d616c7300000000000000000000000060448201526064016104a2565b600081806020019051810190610c579190611c73565b9050610c646002826121be565b610c6f90600a611fc6565b610c7f9063ffffffff88166120f8565b9695505050505050565b600382015460028301546001600160a01b0391821691610cad9183911630856111ca565b505050565b604051636eb1769f60e11b81523060048201526001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000811660248301528391839183169063dd62ed3e9060440160206040518083038186803b158015610d1d57600080fd5b505afa158015610d31573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d559190611bd3565b1015610cad57610cad6001600160a01b0382167f000000000000000000000000000000000000000000000000000000000000000060001961127b565b6000546001600160a01b0361010090910416331461055a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104a2565b610df96113bf565b6000805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b600061043e825490565b6000610e598383611411565b9392505050565b6000610e6d600183611504565b6001600160a01b0383166000908152600460205260408120919250610e9182610e43565b9050828015610e9e575080155b15610eb457610eae600185611526565b50610544565b82158015610ec25750600081115b1561054457610ed260018561153b565b506040516001600160a01b038516907fd4719dd6c50c53a868b4c8eb187c166965be87e084f350aab18e6b0f141c773490600090a250505050565b3360008181526005602090815260408083205490519293610f6f9390926001600160801b03909216910160609290921b6bffffffffffffffffffffffff1916825260801b6fffffffffffffffffffffffffffffffff1916601482015260240190565b60405160208183030381529060405280519060200120905090565b6000610e59838361154c565b600080546001600160a01b0383811661010081810274ffffffffffffffffffffffffffffffffffffffff0019851617855560405193049190911692909183917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a35050565b611004610ae8565b6000805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e263390565b6000806110458561159b565b905060006110528561159b565b90506000611060828461160d565b9050848110156110765760009350505050610e59565b8151601d60ff8216106110b157600061109785604001518660200151611681565b9050836000015160ff168160ff1610156110af578091505b505b835160ff80831691161015806110d157506110cd866001611f0a565b8210155b98975050505050505050565b6000806110e98561171b565b905060006110f68561171b565b90506000611104868861174f565b90508481101561111a5760009350505050610e59565b8183101580611133575061112f856001611f0a565b8110155b979650505050505050565b60008061114a85611774565b9050600061115785611774565b905060006111048688611792565b60606000610e59835b6060816000018054806020026020016040519081016040528092919081815260200182805480156111be57602002820191906000526020600020905b8154815260200190600101908083116111aa575b50505050509050919050565b6040516001600160a01b03808516602483015283166044820152606481018290526105449085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b60408051601f198184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526117b6565b8015806113045750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156112ca57600080fd5b505afa1580156112de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113029190611bd3565b155b6113765760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527f20746f206e6f6e2d7a65726f20616c6c6f77616e63650000000000000000000060648201526084016104a2565b6040516001600160a01b038316602482015260448101829052610cad9084907f095ea7b30000000000000000000000000000000000000000000000000000000090606401611217565b60005460ff1661055a5760405162461bcd60e51b815260206004820152601460248201527f5061757361626c653a206e6f742070617573656400000000000000000000000060448201526064016104a2565b600081815260018301602052604081205480156114fa576000611435600183612182565b855490915060009061144990600190612182565b90508181146114ae5760008660000182815481106114695761146961229c565b906000526020600020015490508087600001848154811061148c5761148c61229c565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806114bf576114bf612286565b60019003818190600052602060002001600090559055856001016000868152602001908152602001600020600090556001935050505061043e565b600091505061043e565b6001600160a01b03811660009081526001830160205260408120541515610e59565b6000610e59836001600160a01b038416611411565b6000610e59836001600160a01b0384165b60008181526001830160205260408120546115935750815460018181018455600084815260208082209093018490558454848252828601909352604090209190915561043e565b50600061043e565b60408051608081018252600080825260208201819052918101829052606081018290529080806115d66115d16201518087611f6f565b61189b565b6040805160808101825260ff928316815291909216602082015263ffffffff90921690820152606081019590955250929392505050565b600081606001518360600151111561162457600080fd5b826020015160ff168360400151600c61163d9190612117565b836020015160ff168460400151600c6116569190612117565b6116609190611f22565b61166a9190612199565b6116749190612199565b63ffffffff169392505050565b60008160ff166001148061169857508160ff166003145b806116a657508160ff166005145b806116b457508160ff166007145b806116c257508160ff166008145b806116d057508160ff16600a145b806116de57508160ff16600c145b156116eb5750601f61043e565b8160ff166002146116fe5750601e61043e565b61170783611a0f565b61171257601c610e59565b50601d92915050565b60008061172b6201518084611f6f565b9050600761173a826003611f0a565b611744919061220d565b610e59906001611f0a565b60008061175c8484611792565b611767906002611f0a565b90506109bd600782611f6f565b600080611784620151808461220d565b9050610e59610e1082611f6f565b6000818311156117a157600080fd5b826117ac8184612182565b610e599190611f6f565b600061180b826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316611a5d9092919063ffffffff16565b805190915015610cad57808060200190518101906118299190611b98565b610cad5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016104a2565b60008080838162253d8c6118b28362010bd9611ea0565b6118bc9190611ea0565b9050600062023ab16118cf836004612071565b6118d99190611f41565b905060046118ea8262023ab1612071565b6118f5906003611ea0565b6118ff9190611f41565b6119099083612143565b9150600062164b0961191c846001611ea0565b61192890610fa0612071565b6119329190611f41565b90506004611942826105b5612071565b61194c9190611f41565b6119569084612143565b61196190601f611ea0565b9250600061098f611973856050612071565b61197d9190611f41565b90506000605061198f8361098f612071565b6119999190611f41565b6119a39086612143565b90506119b0600b83611f41565b94506119bd85600c612071565b6119c8836002611ea0565b6119d29190612143565b915084836119e1603187612143565b6119ec906064612071565b6119f69190611ea0565b611a009190611ea0565b9a919950975095505050505050565b6000611a1c600483612221565b63ffffffff16158015611a3e5750611a35606483612221565b63ffffffff1615155b8061043e5750611a5061019083612221565b63ffffffff161592915050565b60606109bd8484600085856001600160a01b0385163b611abf5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016104a2565b600080866001600160a01b03168587604051611adb9190611cb8565b60006040518083038185875af1925050503d8060008114611b18576040519150601f19603f3d011682016040523d82523d6000602084013e611b1d565b606091505b509150915061113382828660608315611b37575081610e59565b825115611b475782518084602001fd5b8160405162461bcd60e51b81526004016104a29190611dbf565b80356001600160a01b0381168114611b7857600080fd5b919050565b600060208284031215611b8f57600080fd5b610e5982611b61565b600060208284031215611baa57600080fd5b81518015158114610e5957600080fd5b600060208284031215611bcc57600080fd5b5035919050565b600060208284031215611be557600080fd5b5051919050565b60008060008060008060c08789031215611c0557600080fd5b863563ffffffff81168114611c1957600080fd5b955060208701356001600160801b0381168114611c3557600080fd5b9450611c4360408801611b61565b9350606087013592506080870135915060a087013560038110611c6557600080fd5b809150509295509295509295565b600060208284031215611c8557600080fd5b815160ff81168114610e5957600080fd5b60038110611cb457634e487b7160e01b600052602160045260246000fd5b9052565b60008251611cca8184602087016121e1565b9190910192915050565b6020808252825182820181905260009190848201906040850190845b81811015611d155783516001600160a01b031683529284019291840191600101611cf0565b50909695505050505050565b6020808252825182820181905260009190848201906040850190845b81811015611d1557835183529284019291840191600101611d3d565b6101208101611d68828c611c96565b63ffffffff9990991660208201526001600160801b0397881660408201529590961660608601526001600160a01b0393841660808601529190921660a084015260c083019190915260e08201526101000152919050565b6020815260008251806020840152611dde8160408501602087016121e1565b601f01601f19169190910160400192915050565b600061012082019050611e06828451611c96565b63ffffffff60208401511660208301526001600160801b0360408401511660408301526060830151611e4360608401826001600160801b03169052565b506080830151611e5e60808401826001600160a01b03169052565b5060a0830151611e7960a08401826001600160a01b03169052565b5060c083015160c083015260e083015160e083015261010080840151818401525092915050565b6000808212826001600160ff1b0303841381151615611ec157611ec1612244565b82600160ff1b038412811615611ed957611ed9612244565b50500190565b60006001600160801b03808316818516808303821115611f0157611f01612244565b01949350505050565b60008219821115611f1d57611f1d612244565b500190565b600063ffffffff808316818516808303821115611f0157611f01612244565b600082611f5057611f5061225a565b600160ff1b821460001984141615611f6a57611f6a612244565b500590565b600082611f7e57611f7e61225a565b500490565b600181815b80851115611fbe578160001904821115611fa457611fa4612244565b80851615611fb157918102915b93841c9390800290611f88565b509250929050565b6000610e5960ff841683600082611fdf5750600161043e565b81611fec5750600061043e565b8160018114612002576002811461200c57612028565b600191505061043e565b60ff84111561201d5761201d612244565b50506001821b61043e565b5060208310610133831016604e8410600b841016171561204b575081810a61043e565b6120558383611f83565b806000190482111561206957612069612244565b029392505050565b60006001600160ff1b0360008413600084138583048511828216161561209957612099612244565b600160ff1b60008712868205881281841616156120b8576120b8612244565b600087129250878205871284841616156120d4576120d4612244565b878505871281841616156120ea576120ea612244565b505050929093029392505050565b600081600019048311821515161561211257612112612244565b500290565b600063ffffffff8083168185168183048111821515161561213a5761213a612244565b02949350505050565b600080831283600160ff1b0183128115161561216157612161612244565b836001600160ff1b0301831381161561217c5761217c612244565b50500390565b60008282101561219457612194612244565b500390565b600063ffffffff838116908316818110156121b6576121b6612244565b039392505050565b600060ff821660ff8416808210156121d8576121d8612244565b90039392505050565b60005b838110156121fc5781810151838201526020016121e4565b838111156105445750506000910152565b60008261221c5761221c61225a565b500690565b600063ffffffff808416806122385761223861225a565b92169190910692915050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052602160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fdfea164736f6c6343000807000a";

type SpritzSmartPay_OldConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpritzSmartPay_OldConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpritzSmartPay_Old__factory extends ContractFactory {
  constructor(...args: SpritzSmartPay_OldConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    spritzPay: PromiseOrValue<string>,
    autoTaskWallet: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpritzSmartPay_Old> {
    return super.deploy(
      spritzPay,
      autoTaskWallet,
      overrides || {}
    ) as Promise<SpritzSmartPay_Old>;
  }
  override getDeployTransaction(
    spritzPay: PromiseOrValue<string>,
    autoTaskWallet: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      spritzPay,
      autoTaskWallet,
      overrides || {}
    );
  }
  override attach(address: string): SpritzSmartPay_Old {
    return super.attach(address) as SpritzSmartPay_Old;
  }
  override connect(signer: Signer): SpritzSmartPay_Old__factory {
    return super.connect(signer) as SpritzSmartPay_Old__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpritzSmartPay_OldInterface {
    return new utils.Interface(_abi) as SpritzSmartPay_OldInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpritzSmartPay_Old {
    return new Contract(address, _abi, signerOrProvider) as SpritzSmartPay_Old;
  }
}
