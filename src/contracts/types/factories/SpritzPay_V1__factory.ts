/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { SpritzPay_V1, SpritzPay_V1Interface } from "../SpritzPay_V1";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FailedRefund",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sourceTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "sourceTokenAmount",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentTokenAmount",
        type: "uint256",
      },
    ],
    name: "FailedSwap",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "tokenAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "FailedTokenTransfer",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "NonAcceptedToken",
    type: "error",
  },
  {
    inputs: [],
    name: "SetZeroAddress",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sourceToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "sourceTokenAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "paymentToken",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "paymentTokenAmount",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
    ],
    name: "Payment",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "PaymentRecipientChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PaymentTokenAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "PaymentTokenRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PAUSER_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "addPaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getAcceptedPaymentTokens",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getRoleMember",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleMemberCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_paymentRecipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_swapTarget",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wrappedNative",
        type: "address",
      },
      {
        internalType: "address[]",
        name: "_acceptedTokens",
        type: "address[]",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "path",
        type: "address[]",
      },
      {
        internalType: "uint256",
        name: "sourceTokenAmountMax",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "paymentTokenAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
    ],
    name: "payWithSwap",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "paymentTokenAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "paymentTokenAmount",
        type: "uint256",
      },
      {
        internalType: "bytes32",
        name: "paymentReference",
        type: "bytes32",
      },
    ],
    name: "payWithToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentRecipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newToken",
        type: "address",
      },
    ],
    name: "removePaymentToken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPaymentRecipient",
        type: "address",
      },
    ],
    name: "setPaymentRecipient",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "swapTarget",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506120da806100206000396000f3fe6080604052600436106101395760003560e01c80637e7f0cde116100ab578063a51254211161006f578063a512542114610358578063ca15c87314610378578063d547741f14610398578063d71d9632146103b8578063e63ab1e9146103d8578063f8453e7c1461040c57600080fd5b80637e7f0cde146102cf5780638456cb59146102ee5780639010d07c1461030357806391d1485414610323578063a217fddf1461034357600080fd5b806336568abe116100fd57806336568abe1461022d5780633f4ba83a1461024d5780634a7dc8e0146102625780634c26a1cc146102825780635c975abb1461029557806377be3d2f146102ad57600080fd5b806301ffc9a714610145578063248a9ca31461017a5780632983c4b8146101b85780632b1eaf29146101da5780632f2ff15d1461020d57600080fd5b3661014057005b600080fd5b34801561015157600080fd5b50610165610160366004611d6e565b61042c565b60405190151581526020015b60405180910390f35b34801561018657600080fd5b506101aa610195366004611d07565b60009081526097602052604090206001015490565b604051908152602001610171565b3480156101c457600080fd5b506101d86101d3366004611aea565b610457565b005b3480156101e657600080fd5b5061012d546001600160a01b03165b6040516001600160a01b039091168152602001610171565b34801561021957600080fd5b506101d8610228366004611d20565b61046f565b34801561023957600080fd5b506101d8610248366004611d20565b610499565b34801561025957600080fd5b506101d8610518565b34801561026e57600080fd5b506101d861027d366004611aea565b61052e565b6101d8610290366004611bbe565b610542565b3480156102a157600080fd5b5060335460ff16610165565b3480156102b957600080fd5b506102c2610a09565b6040516101719190611e89565b3480156102db57600080fd5b5061012e546001600160a01b03166101f5565b3480156102fa57600080fd5b506101d8610a1b565b34801561030f57600080fd5b506101f561031e366004611d4c565b610a4d565b34801561032f57600080fd5b5061016561033e366004611d20565b610a6c565b34801561034f57600080fd5b506101aa600081565b34801561036457600080fd5b506101d8610373366004611aea565b610a97565b34801561038457600080fd5b506101aa610393366004611d07565b610aab565b3480156103a457600080fd5b506101d86103b3366004611d20565b610ac2565b3480156103c457600080fd5b506101d86103d3366004611b8b565b610ae7565b3480156103e457600080fd5b506101aa7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a81565b34801561041857600080fd5b506101d8610427366004611b05565b610ba4565b60006001600160e01b03198216635a05180f60e01b1480610451575061045182610cd9565b92915050565b600061046281610d0e565b61046b82610d18565b5050565b60008281526097602052604090206001015461048a81610d0e565b6104948383610d9a565b505050565b6001600160a01b038116331461050e5760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61046b8282610dbc565b600061052381610d0e565b61052b610dde565b50565b600061053981610d0e565b61046b82610e30565b61054a610e76565b600260fb54141561059d5760405162461bcd60e51b815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c006044820152606401610505565b600260fb556000868682816105b4576105b46120a1565b90506020020160208101906105c99190611aea565b9050600087876105da600182612000565b8181106105e9576105e96120a1565b90506020020160208101906105fe9190611aea565b905061060981610ebe565b6106315760405163785fb0e760e11b81526001600160a01b0382166004820152602401610505565b61012f5482906001600160a01b038083169116148061071f5761012e54604051636eb1769f60e11b81523060048201526001600160a01b03918216602482015260009184169063dd62ed3e9060440160206040518083038186803b15801561069857600080fd5b505afa1580156106ac573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d09190611d98565b9050888110156107085761012e54610708906001600160a01b03166106f783600019612000565b6001600160a01b0386169190610ecc565b61071d6001600160a01b03841633308c610fc0565b505b61012e546060906001600160a01b0316826107dd57806001600160a01b0316638803dbee8a8c8f8f61012d60009054906101000a90046001600160a01b03168d6040518763ffffffff1660e01b815260040161078096959493929190611f8b565b600060405180830381600087803b15801561079a57600080fd5b505af11580156107ae573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526107d69190810190611c20565b9150610881565b806001600160a01b031663fb3bdb41348b8f8f61012d60009054906101000a90046001600160a01b03168d6040518763ffffffff1660e01b8152600401610828959493929190611f54565b6000604051808303818588803b15801561084157600080fd5b505af1158015610855573d6000803e3d6000fd5b50505050506040513d6000823e601f3d908101601f1916820160405261087e9190810190611c20565b91505b50600081600081518110610897576108976120a1565b60209081029190910181015161012d54604080516001600160a01b03928316815293840183905288821690840152606083018c905290925089919088169033907f2415a5b602fd0082bd30dae862c30bbf8abbfcf39db48726b2d8ef555ee1abde9060800160405180910390a46000610910828c612000565b905080156109f5576000846109a45760405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0387169063a9059cbb90604401602060405180830381600087803b15801561096757600080fd5b505af115801561097b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099f9190611ce5565b6109c1565b604051339083156108fc029084906000818181858888f193505050505b9050806109f357604051630814880360e01b81526001600160a01b038916600482015260248101839052604401610505565b505b5050600160fb555050505050505050505050565b6060610a16610130610ff8565b905090565b7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a610a4581610d0e565b61052b611005565b600082815260c960205260408120610a659083611042565b9392505050565b60009182526097602090815260408084206001600160a01b0393909316845291905290205460ff1690565b6000610aa281610d0e565b61046b8261104e565b600081815260c96020526040812061045190611094565b600082815260976020526040902060010154610add81610d0e565b6104948383610dbc565b610aef610e76565b82610afc6101308261109e565b610b245760405163785fb0e760e11b81526001600160a01b0382166004820152602401610505565b61012d54604080516001600160a01b0392831681526020810186905291861690820181905260608201859052839133907f2415a5b602fd0082bd30dae862c30bbf8abbfcf39db48726b2d8ef555ee1abde9060800160405180910390a461012d54610b9e906001600160a01b038681169133911686610fc0565b50505050565b600054610100900460ff1615808015610bc45750600054600160ff909116105b80610bde5750303b158015610bde575060005460ff166001145b610c415760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610505565b6000805460ff191660011790558015610c64576000805461ff0019166101001790555b610c728787878787876110c0565b610c7a611183565b610c826111b2565b610c8a6111d9565b8015610cd0576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50505050505050565b60006001600160e01b03198216637965db0b60e01b148061045157506301ffc9a760e01b6001600160e01b0319831614610451565b61052b8133611208565b6001600160a01b038116610d3f57604051631508131960e01b815260040160405180910390fd5b61012d80546001600160a01b0319166001600160a01b038316908117909155604080519182523360208301527ff2aee2de2705c86bdfda6c3ddaddc83ce3b729f850c62f38aa6c9fc93158a5d491015b60405180910390a150565b610da4828261126c565b600082815260c96020526040902061049490826112f2565b610dc68282611307565b600082815260c960205260409020610494908261136e565b610de6611383565b6033805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b610e3c610130826112f2565b506040516001600160a01b03821681527fa317c10673baf4f03b3c1041bd5ddbb537d0333a86fec3607c75f9dbb630f48f90602001610d8f565b60335460ff1615610ebc5760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610505565b565b60006104516101308361109e565b604051636eb1769f60e11b81523060048201526001600160a01b038381166024830152600091839186169063dd62ed3e9060440160206040518083038186803b158015610f1857600080fd5b505afa158015610f2c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f509190611d98565b610f5a9190611fc9565b6040516001600160a01b038516602482015260448101829052909150610b9e90859063095ea7b360e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526113cc565b6040516001600160a01b0380851660248301528316604482015260648101829052610b9e9085906323b872dd60e01b90608401610f89565b60606000610a658361149e565b61100d610e76565b6033805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e133390565b6000610a6583836114fa565b61105a6101308261136e565b506040516001600160a01b03821681527f85a3e72f8dd6db3794f93109c3c5f5b79d6112f6979431c45f98b26134b42af290602001610d8f565b6000610451825490565b6001600160a01b03811660009081526001830160205260408120541515610a65565b600054610100900460ff166110e75760405162461bcd60e51b815260040161050590611f09565b6110f2600087611524565b61111c7f65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a87611524565b61112585610d18565b61112e8461152e565b61113783611578565b60005b81811015610cd057611171838383818110611157576111576120a1565b905060200201602081019061116c9190611aea565b610e30565b8061117b8161205a565b91505061113a565b600054610100900460ff166111aa5760405162461bcd60e51b815260040161050590611f09565b610ebc6115c2565b600054610100900460ff16610ebc5760405162461bcd60e51b815260040161050590611f09565b600054610100900460ff166112005760405162461bcd60e51b815260040161050590611f09565b610ebc6115f5565b6112128282610a6c565b61046b5761122a816001600160a01b03166014611623565b611235836020611623565b604051602001611246929190611e14565b60408051601f198184030181529082905262461bcd60e51b825261050591600401611ed6565b6112768282610a6c565b61046b5760008281526097602090815260408083206001600160a01b03851684529091529020805460ff191660011790556112ae3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000610a65836001600160a01b0384166117bf565b6113118282610a6c565b1561046b5760008281526097602090815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000610a65836001600160a01b03841661180e565b60335460ff16610ebc5760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b6044820152606401610505565b6000611421826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166119019092919063ffffffff16565b805190915015610494578080602001905181019061143f9190611ce5565b6104945760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610505565b6060816000018054806020026020016040519081016040528092919081815260200182805480156114ee57602002820191906000526020600020905b8154815260200190600101908083116114da575b50505050509050919050565b6000826000018281548110611511576115116120a1565b9060005260206000200154905092915050565b61046b8282610d9a565b6001600160a01b03811661155557604051631508131960e01b815260040160405180910390fd5b61012e80546001600160a01b0319166001600160a01b0392909216919091179055565b6001600160a01b03811661159f57604051631508131960e01b815260040160405180910390fd5b61012f80546001600160a01b0319166001600160a01b0392909216919091179055565b600054610100900460ff166115e95760405162461bcd60e51b815260040161050590611f09565b6033805460ff19169055565b600054610100900460ff1661161c5760405162461bcd60e51b815260040161050590611f09565b600160fb55565b60606000611632836002611fe1565b61163d906002611fc9565b67ffffffffffffffff811115611655576116556120b7565b6040519080825280601f01601f19166020018201604052801561167f576020820181803683370190505b509050600360fc1b8160008151811061169a5761169a6120a1565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106116c9576116c96120a1565b60200101906001600160f81b031916908160001a90535060006116ed846002611fe1565b6116f8906001611fc9565b90505b6001811115611770576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061172c5761172c6120a1565b1a60f81b828281518110611742576117426120a1565b60200101906001600160f81b031916908160001a90535060049490941c9361176981612043565b90506116fb565b508315610a655760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610505565b600081815260018301602052604081205461180657508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610451565b506000610451565b600081815260018301602052604081205480156118f7576000611832600183612000565b855490915060009061184690600190612000565b90508181146118ab576000866000018281548110611866576118666120a1565b9060005260206000200154905080876000018481548110611889576118896120a1565b6000918252602080832090910192909255918252600188019052604090208390555b85548690806118bc576118bc61208b565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610451565b6000915050610451565b60606119108484600085611918565b949350505050565b6060824710156119795760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610505565b6001600160a01b0385163b6119d05760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610505565b600080866001600160a01b031685876040516119ec9190611df8565b60006040518083038185875af1925050503d8060008114611a29576040519150601f19603f3d011682016040523d82523d6000602084013e611a2e565b606091505b5091509150611a3e828286611a49565b979650505050505050565b60608315611a58575081610a65565b825115611a685782518084602001fd5b8160405162461bcd60e51b81526004016105059190611ed6565b80356001600160a01b0381168114611a9957600080fd5b919050565b60008083601f840112611ab057600080fd5b50813567ffffffffffffffff811115611ac857600080fd5b6020830191508360208260051b8501011115611ae357600080fd5b9250929050565b600060208284031215611afc57600080fd5b610a6582611a82565b60008060008060008060a08789031215611b1e57600080fd5b611b2787611a82565b9550611b3560208801611a82565b9450611b4360408801611a82565b9350611b5160608801611a82565b9250608087013567ffffffffffffffff811115611b6d57600080fd5b611b7989828a01611a9e565b979a9699509497509295939492505050565b600080600060608486031215611ba057600080fd5b611ba984611a82565b95602085013595506040909401359392505050565b60008060008060008060a08789031215611bd757600080fd5b863567ffffffffffffffff811115611bee57600080fd5b611bfa89828a01611a9e565b909a90995060208901359860408101359850606081013597506080013595509350505050565b60006020808385031215611c3357600080fd5b825167ffffffffffffffff80821115611c4b57600080fd5b818501915085601f830112611c5f57600080fd5b815181811115611c7157611c716120b7565b8060051b604051601f19603f83011681018181108582111715611c9657611c966120b7565b604052828152858101935084860182860187018a1015611cb557600080fd5b600095505b83861015611cd8578051855260019590950194938601938601611cba565b5098975050505050505050565b600060208284031215611cf757600080fd5b81518015158114610a6557600080fd5b600060208284031215611d1957600080fd5b5035919050565b60008060408385031215611d3357600080fd5b82359150611d4360208401611a82565b90509250929050565b60008060408385031215611d5f57600080fd5b50508035926020909101359150565b600060208284031215611d8057600080fd5b81356001600160e01b031981168114610a6557600080fd5b600060208284031215611daa57600080fd5b5051919050565b8183526000602080850194508260005b85811015611ded576001600160a01b03611dda83611a82565b1687529582019590820190600101611dc1565b509495945050505050565b60008251611e0a818460208701612017565b9190910192915050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611e4c816017850160208801612017565b7001034b99036b4b9b9b4b733903937b6329607d1b6017918401918201528351611e7d816028840160208801612017565b01602801949350505050565b6020808252825182820181905260009190848201906040850190845b81811015611eca5783516001600160a01b031683529284019291840191600101611ea5565b50909695505050505050565b6020815260008251806020840152611ef5816040850160208701612017565b601f01601f19169190910160400192915050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b858152608060208201526000611f6e608083018688611db1565b6001600160a01b0394909416604083015250606001529392505050565b86815285602082015260a060408201526000611fab60a083018688611db1565b6001600160a01b039490941660608301525060800152949350505050565b60008219821115611fdc57611fdc612075565b500190565b6000816000190483118215151615611ffb57611ffb612075565b500290565b60008282101561201257612012612075565b500390565b60005b8381101561203257818101518382015260200161201a565b83811115610b9e5750506000910152565b60008161205257612052612075565b506000190190565b600060001982141561206e5761206e612075565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000807000a";

type SpritzPay_V1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SpritzPay_V1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SpritzPay_V1__factory extends ContractFactory {
  constructor(...args: SpritzPay_V1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<SpritzPay_V1> {
    return super.deploy(overrides || {}) as Promise<SpritzPay_V1>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SpritzPay_V1 {
    return super.attach(address) as SpritzPay_V1;
  }
  override connect(signer: Signer): SpritzPay_V1__factory {
    return super.connect(signer) as SpritzPay_V1__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SpritzPay_V1Interface {
    return new utils.Interface(_abi) as SpritzPay_V1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SpritzPay_V1 {
    return new Contract(address, _abi, signerOrProvider) as SpritzPay_V1;
  }
}
